make index.php page
make stye.css on root of project

============================================================================================================================
============================================================================================================================


sepirate header and footer that repeat in all pages and put them in header.php and header.php
then import in in index.php with code bellow :
<?php
        get_header();
        get_footer();
?>
and in the end of header.php and footer.php and any other part we should set a function for php to know the file:
<?php wp_head() & wp_footer() ?>


============================================================================================================================
============================================================================================================================


to add files that will be import to our  project (links and scripts) we should replace functions for addressing
for main stylesheet that is in our root directory we should use this code:
<link href="<?php echo get_template_stylesheet() ?>"


============================================================================================================================
============================================================================================================================


for others links we use first get our directory with a function then complete the other part of address:

<link href="<?php echo get_template_directory_uri() ?>/assets/css/filan.css">
our
<link href="<?php echo get_template_directory_uri().'/assets/css/filan.css'?>">


============================================================================================================================
============================================================================================================================


also we can define a simple name for long texts in wordpress=>
we put code bellow in functions.php:
define("MyRoot",get_template_directory_uri());
so,for all IN-Project files that we want to import we should address with directory address then internal addresses


============================================================================================================================
============================================================================================================================

for change title of website dynamycly, in title tag in head , we use wp_title() . but we should enable this feature in functions.php so in functions.php we write
add_theme_support('title-tag')

in the HTML tag we should set a function to change the language dynamylcy:
<html <?php lang_attributes(); ?> >

============================================================================================================================
============================================================================================================================


we can sepirate other part of main page with code bellow:
get_template_part('address') without extension for example slider.php ===>> parts/slider


============================================================================================================================
============================================================================================================================


add_action('after_setup_theme' , 'some shit') ==> this will be executed everytime template will run

============================================================================================================================
============================================================================================================================


for define and add a menu we should set a menu in functions.php we should add an action for when page will run and then
this action run a function for us where we can define our menus:
function myThemeSetup(){
    //in here we write code we want to execute when thme is being loaded
        register_nav_menu('menu key' , ' descripe/name menu')

        //if we want to define multiple menus we define an array that key will be our location and value will be our description
        $menus = array (
            'header-menu' => 'a menu for header',
            'footer-menu' => 'a menu for footer'

        	);
        then we pass this array to bellow function:
        register_nav_menus($menus)
}
add_action('after_setup_theme' , 'myThemeSetup')

then we should define to wordpress where this menu should be

then we should asign a menu in theme to our menu that we've already define.for this we should some tasks where we want to create the menu:
<?php if( has_nav_menu('key of menu where defined')) : ?>
    <?php wp_nav_menu($config); ?>
        <?php else : ?>
            <div>definde a menu for this place in wp admin pannel</div>
        <?php endif; ?>

        $config = array(
        'menu'            => '',
        'container'       => 'div',
        'container_class' => '',
                => '',
        'menu_class'      => 'navbar-nav',
        'menu_id'         => '',
        'echo'            => true,
        'fallback_cb'     => 'wp_page_menu',
        'before'          => '',
        'after'           => '',
        'link_before'     => '',
        'link_after'      => '',
        'items_wrap'      => '<ul id="%1$s" class="%2$s">%3$s</ul>',
        'item_spacing'    => 'preserve',
        'depth'           => 0,
        'walker'          => '',
        'theme_location'  => '',
    );

    Parameters #Parameters
$args
(array) (Optional) Array of nav menu arguments.

'menu'
(int|string|WP_Term) Desired menu. Accepts a menu ID, slug, name, or object.
'menu_class'
(string) CSS class to use for the ul element which forms the menu. Default 'menu'.
'menu_id'
(string) The ID that is applied to the ul element which forms the menu. Default is the menu slug, incremented.
'container'
(string) Whether to wrap the ul, and what to wrap it with. Default 'div'.
'container_class'
(string) Class that is applied to the container. Default 'menu-{menu slug}-container'.
'container_id'
(string) The ID that is applied to the container.
'fallback_cb'
(callable|bool) If the menu doesn't exist, a callback function will fire. Default is 'wp_page_menu'. Set to false for no fallback.
'before'
(string) Text before the link markup.
'after'
(string) Text after the link markup.
'link_before'
(string) Text before the link text.
'link_after'
(string) Text after the link text.
'echo'
(bool) Whether to echo the menu or return it. Default true.
'depth'
(int) How many levels of the hierarchy are to be included. 0 means all. Default 0.
'walker'
(object) Instance of a custom walker class.
'theme_location'
(string) Theme location to be used. Must be registered with register_nav_menu() in order to be selectable by the user.
'items_wrap'
(string) How the list items should be wrapped. Default is a ul with an id and class. Uses printf() format with numbered placeholders.
'item_spacing'
(string) Whether to preserve whitespace within the menu's HTML. Accepts 'preserve' or 'discard'. Default 'preserve'.
Default value: array()

